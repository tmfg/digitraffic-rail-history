name: Install
on:
  workflow_dispatch:
    inputs:
      env:
        description: 'Environment'
        required: true
        type: environment
        default: 'beta'
jobs:
  install:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      actions: read
    environment: ${{ github.event.inputs.env }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.CONFIG_SSH_PRIVATE_KEY }}
      - name: Checkout config repo
        run: |
          git clone ${{ secrets.CONFIG_REPO_URL }} config
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          role-session-name: gh-actions-build-rail-history-${{ github.event.inputs.env }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build frontend
        run: |
          cd train-history-web
          npm ci
          npx ng build --base-href /history/
          tar -czvf train-history-web.tar dist nginx.conf
          cp train-history-web.tar ../config/aws
          cd ../config/aws
          docker build --no-cache \
            --build-arg ENV=${{ github.event.inputs.env }} \
            --build-arg APP_FILE=train-history-web.tar \
            -t ${{ secrets.ECR_URL }}/train-history-web:${GITHUB_SHA} \
            --pull=true --file=Dockerfile-rail-train-history-web .
          docker push ${{ secrets.ECR_URL }}/train-history-web:${GITHUB_SHA}
      - name: Build backend
        run: |
          cd train-history-backend
          mvn install -DskipTests=true -Ddependency-check.skip=true
          cp target/train-history-backend-0.0.1-SNAPSHOT.jar ../config/aws/train-history-backend.jar
          cd ../config/aws
          docker build --no-cache \
            --build-arg ENV=${{ github.event.inputs.env }} \
            --build-arg APP_FILE=train-history-backend.jar \
            --build-arg PROPERTY_FILE=conf/train-history-backend-${{ github.event.inputs.env }}.properties \
            -t ${{ secrets.ECR_URL }}/train-history-backend:${GITHUB_SHA} \
            --pull=true --file=Dockerfile-rail-train-history-backend .
          docker push ${{ secrets.ECR_URL }}/train-history-backend:${GITHUB_SHA}
      - name: Build updater
        run: |
          cd train-history-updater
          mvn install -DskipTests=true -Ddependency-check.skip=true
          cp target/train-history-updater-0.0.1-SNAPSHOT.jar ../config/aws/train-history-updater.jar
          cd ../config/aws
          docker build --no-cache \
            --build-arg ENV=${{ github.event.inputs.env }} \
            --build-arg APP_FILE=train-history-updater.jar \
            --build-arg PROPERTY_FILE=conf/train-history-updater-${{ github.event.inputs.env }}.properties \
            -t ${{ secrets.ECR_URL }}/train-history-updater:${GITHUB_SHA} \
            --pull=true --file=Dockerfile-rail-train-history-updater .
          docker push ${{ secrets.ECR_URL }}/train-history-updater:${GITHUB_SHA}
      - name: Notify Slack
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: failure
          text: FAILED Rail-history Install
          fields: repo, job, took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

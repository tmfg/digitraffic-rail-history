name: Build
on: [push, workflow_dispatch]
jobs:
  build:
    if: github.repository != 'tmfg/digitraffic-rail-history'
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      actions: read
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Setup Java
        uses: actions/setup-java@v5
        with:
          java-version: 21
          distribution: corretto
          cache: maven
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
      - name: Run initialize
        run: mvn initialize
      - name: Build frontend
        run: |
          cd train-history-web
          npm ci
          npx ng build --base-href /history/
      - name: Build backend
        run: |
          cd train-history-backend
          mvn install -DskipTests=true
      - name: Build updater
        run: |
          cd train-history-updater
          mvn install
      - name: Setup database
        run: |
          cd db
          docker compose up -d
      - name: Wait for database readiness
        run: |
          until docker exec db-rail_history_mysql-1 mysqladmin ping -h localhost --silent; do
            echo "Waiting for database to be ready..."
            sleep 5
          done
      - name: Run database migrations
        run: |
          cd db
          docker compose up rail_history_flyway
      - name: Get database IP
        run: echo "db_addr=$(docker inspect db-rail_history_mysql-1 -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}')" >> $GITHUB_ENV
      - name: Run backend tests
        run: |
          cd train-history-backend
          mvn -f pom.xml test -Dspring.datasource.url=jdbc:mysql://${{ env.db_addr }}/trainhistoryjson -Dspring.datasource.username=rail_history -Dspring.datasource.password=rail_pass123
      - name: Notify Slack
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: failure
          text: FAILED Rail-history Build
          fields: repo, job, took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
